syntax = "proto3";
option go_package = "proto/proto";

package proto;

service CriticalService {
    rpc AreYouTheLeader (Request) returns (Reply) {}
    rpc AreYouTheViceLeader (Request) returns (Reply) {}
    rpc YouTheViceLeader (Request) returns (ack) {}
    rpc MakeBid (bid) returns (ack) {}
    rpc getResult (AskForResult) returns (result) {}
    rpc leaderWrite (bid) returns (ack) {}
    rpc getnodeType (ack) returns (nodeType) {}
    rpc cantFindLeader (nodeType) returns (ack) {}
}

message Request {
    string name = 1;
    //int64  timeStamp = 2;
    
}


message nodeType {

    bool type = 1;

}

message bid {
    int64 amount = 1;
    string bidder = 2;
    
}

message ack {
    string message = 1;
}

message result {
    int64 result = 1; 
    string winner = 2;
    bool over = 3;
}

message AskForResult {
    string res = 1;
}

message Reply {
    string message = 1;
    int64  timeStamp = 2;
    bool   leader = 3;

}